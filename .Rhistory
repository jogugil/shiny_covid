route("spanhisData", spanhisData_page),
route("ValenciaData", ValenciaData_page),
route("recomendacionesOMS", recomendacionesOMS_page),
route("globalDataUpdate", globalDataUpdate_page),
route("spanhisDataUpdate", spanhisDataUpdate_page),
route("ValenciaDataUpdate", ValenciaDataUpdate_page),
route("recomendacionesOMSUpdate", recomendacionesOMSUpdate_page),
route("about", about_page),
route("guideline", guideline_page)
)
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("pages/about.R")
source("pages/template.R")
source("pages/guideline.R")
home_page <-  page("Home page", "Welcome on sample routing page!", "table_one")
globalData_page <-page("globalData_page", "This is a globalData_page page", "table_one")
spanhisData_page <- page("spanhisData_page", "This is a spanhisData_page page", "table_one")
ValenciaData_page <-  page("ValenciaData_page", "This is a ValenciaData_page page", "table_one")
recomendacionesOMS_page <-  page("recomendacionesOMS_page", "This is a recomendacionesOMS_page page", "table_one")
globalDataUpdate_page <-  page("globalDataUpdate_page", "This is a globalDataUpdate_page page", "table_one")
spanhisDataUpdate_page <- page("spanhisDataUpdate_page", "This is a spanhisDataUpdate_page page", "table_one")
ValenciaDataUpdate_page<-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
ValenciaDataUpdate_page <-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
recomendacionesOMSUpdate_page <-  page("recomendacionesOMSUpdate_page", "This is a recomendacionesOMSUpdate_page page", "table_one")
about_page <- template("about", about_page())
about_page <- template("guideline", guideline_page())
router <- make_router(
route("/", home_page),
route("globalData", globalData_page),
route("spanhisData", spanhisData_page),
route("ValenciaData", ValenciaData_page),
route("recomendacionesOMS", recomendacionesOMS_page),
route("globalDataUpdate", globalDataUpdate_page),
route("spanhisDataUpdate", spanhisDataUpdate_page),
route("ValenciaDataUpdate", ValenciaDataUpdate_page),
route("recomendacionesOMSUpdate", recomendacionesOMSUpdate_page),
route("about", about_page),
route("guideline", guideline_page)
)
runApp('AppCOVID')
runApp('AppCOVID')
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("helpers/global.R")
getwd()
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("./helpers/global.R")
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("./helpers/global.R")
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("./helpers/global.R")
runApp('AppCOVID')
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("./pages/about.R")
source("./pages/template.R")
source("./pages/guideline.R")
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("./pages/about.R")
source("./pages/template.R")
source("./pages/guideline.R")
home_page <-  page("Home page", "Welcome on sample routing page!", "table_one")
globalData_page <-page("globalData_page", "This is a globalData_page page", "table_one")
spanhisData_page <- page("spanhisData_page", "This is a spanhisData_page page", "table_one")
ValenciaData_page <-  page("ValenciaData_page", "This is a ValenciaData_page page", "table_one")
recomendacionesOMS_page <-  page("recomendacionesOMS_page", "This is a recomendacionesOMS_page page", "table_one")
globalDataUpdate_page <-  page("globalDataUpdate_page", "This is a globalDataUpdate_page page", "table_one")
spanhisDataUpdate_page <- page("spanhisDataUpdate_page", "This is a spanhisDataUpdate_page page", "table_one")
ValenciaDataUpdate_page<-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
ValenciaDataUpdate_page <-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
recomendacionesOMSUpdate_page <-  page("recomendacionesOMSUpdate_page", "This is a recomendacionesOMSUpdate_page page", "table_one")
about_page <- template("about", about_page())
about_page <- template("guideline", guideline_page())
router <- make_router(
route("/", home_page),
route("globalData", globalData_page),
route("spanhisData", spanhisData_page),
route("ValenciaData", ValenciaData_page),
route("recomendacionesOMS", recomendacionesOMS_page),
route("globalDataUpdate", globalDataUpdate_page),
route("spanhisDataUpdate", spanhisDataUpdate_page),
route("ValenciaDataUpdate", ValenciaDataUpdate_page),
route("recomendacionesOMSUpdate", recomendacionesOMSUpdate_page),
route("about", about_page),
route("guideline", guideline_page)
)
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("./helpers/global.R")
runApp('AppCOVID')
setwd(("."))
runApp('AppCOVID')
list.files ()
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
shiny::runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
install.packages("shinyDashboardThemes")
runApp('AppCOVID')
runApp('AppCOVID')
install.packages("shinyDashboardThemes")
runApp('AppCOVID')
install_github("nik01010/dashboardthemes")
library(devtools)
install_github("nik01010/dashboardthemes")
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
shiny::runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
))
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
shiny::runApp('AppCOVID')
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
recomenda <- html %>% html_nodes(".sf_colsIn col-md-9")
recomenda %>% html_table()
tt <- recomenda %>% html_table()
tt
tt <- recomenda %>% html_nodes (".row")
tt
View(recomendacionesOMSUpdate_page)
View(recomendacionesOMSUpdate_page)
recomenda %>% html_text()
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
recomenda <- html %>% html_nodes(".sf_colsIn col-md-9")
recomenda <- html %>% html_nodes(".sf_colsIn .col-md-9")
recomenda %>% html_text()
recomienda %>% html_nodes(".sf-image thumb")
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
recomenda <- html %>% html_nodes(".sf_colsIn col-md-9")
recomienda %>% html_nodes(".sf-image thumb")
recomenda %>% html_nodes(".sf-image thumb")
html %>% html_nodes(".sf-image thumb")
html %>% html_nodes(".sf-image .thumb")
html %>% html_nodes(class="lazy")
html %>% html_node(class="lazy")
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
recomenda <- html %>% html_nodes(".sf_colsIn col-md-9")
HTML
html
html %>% html_nodes(div.sf-images)
html %>% html_nodes("div.sf-images")
html %>% html_nodes("div")
html %>% html_nodes("div.lazy")
html %>% html_nodes(".lazy")
html %>% html_nodes(".lazy") %>% html_text()
html %>% html_nodes(".lazy") %>% html_atrrs()
html %>% html_nodes(".lazy") %>% html_attrs()
dd <- html %>% html_nodes(".lazy") %>% html_attrs()
View(dd)
View(dd)
dd <- html %>% html_nodes(".lazy") %>% filter (data-src.contains('health-topics/coronavirus'))
dd <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {print(node ['data-src']) })
dd <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {print(node) })
dd <- html %>% html_nodes(".lazy") %>%  html_attr('data-src')
dd
dd <- html %>% html_nodes(".lazy") %>%  html_attrs('data-src','alt')
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
list_post <- html %>% html_nodes(".lazy")
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
})
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
print (node)
})
dd <- html %>% html_nodes(".lazy") %>%  html_attrs('data-src','alt')
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
print (node)
})
dd <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {print(node) })
dd <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {print(node) })
dd <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {  print(node) })
dd <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {  print(node);  pp <- node %>% html_attr ('data-src') %>% gsub('coronavirus');print(pp) })
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
print(node)
pp <- node %>% html_attr ('data-src') %>%
gsub('coronavirus')
print(pp) })
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
print(node)
pp <- node %>% html_attr ('data-src')
print(pp) })
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
print(node)
pp <- node %>% html_attr ('data-src') %>% filter(grepl(.'coronavirus'))
print(pp) })
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
print(node)
pp <- node %>% html_attr ('data-src') %>% filter(grepl(.'coronavirus'))
print(pp) })
pp <- node %>% html_attr ('data-src') %>%  grepl(.,'coronavirus')
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
print(node)
print(node %>% html_attr ('data-src') %>%  grepl(.,'coronavirus'))
})
print(node %>% html_attr ('data-src') %>%  grepl('coronavirus'))
print(node %>% html_attr ('data-src')  )
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
print(node)
print(node %>% html_attr ('data-src')  )
})
grepl ("/images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7",'coronavirus')
grepl ("/images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7",'/coronavirus/')
tt <- "/images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7"
tt %>% grepl ('corona')
grepl('corona',tt)
tt %>% gsub ('corona')
tt %>% gsub ('corona',.)
tt %>% grepl ('corona',.)
html %>% html_nodes('.lazy') %>% html_
html %>% html_nodes('.lazy') %>% html_ar
html %>% html_nodes('.lazy') %>% html_arttr('data-src') %>% filter(grepl('coronavirus',.))
html %>% html_nodes('.lazy') %>% html_attr('data-src') %>% filter(grepl('coronavirus',.))
html %>% html_nodes('.lazy') %>% html_childre()
html %>% html_nodes('.lazy') %>% html_children()
html %>% html_nodes('.lazy') %>% html_attrs()
html %>% html_nodes('.lazy') %>% html_attrs() %>% lapply(.function (x){if(grepl('coronavirus',x['data-src'])) print("TETETETETE")})
html %>% html_nodes('.lazy') %>% html_attrs() %>% lapply(.function (x){if(grepl('coronavirus',x['data-src'])) print("TETETETETE")})
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- node %>% html_attr ('data_image')
df <- data.frame (title =alt,href=href)
}
df
})
html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- node %>% html_attr ('data-image')
df <- data.frame (title =alt,href=href)
}
df
})
tt <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- node %>% html_attr ('data-image')
df <- data.frame (title =alt,href=href)
}
df
})
str(tt)
tt %>% !is.null(.)
tt %>% is.null(.)
tt %>% lapply(,!is.null)
tt %>% lapply(,is.null)
?is.nul
?is.null
tt %>% na.omit(.)
tt %>% filter(.,is.null)
tt %>% sapply(., is.null)
tt %>% !sapply(., is.null)
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
df <- data.frame (title =alt,href=href)
}
df
})
images [!sapply(images, is.null)]
View(images)
View(images)
images <- images [!sapply(images, is.null)]
View(images)
View(images)
tt %>% sapply(., is.null)
runApp('AppCOVID')
runApp('AppCOVID')
