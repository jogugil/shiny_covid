)
runApp('ejemrouter.R')
runApp('ejemrouter.R')
runApp('ejemrouter.R')
library(shiny.router)
# This creates UI for each page.
page <- function(title, content) {
div(
titlePanel(title),
p(content),
uiOutput("power_of_input")
)
}
# Part of both sample pages.
home_page <- page("Home page", "This is the home page!")
side_page <- page("Side page", "This is the side page!")
# Callbacks on the server side for the sample pages
home_server <- function(input, output, session) {
output$power_of_input <- renderUI({
HTML(paste(
"I display <strong>square</strong> of input and pass result to <code>output$power_of_input</code>: ",
as.numeric(input$int) ^ 2))
})
}
side_server <- function(input, output, session) {
output$power_of_input <- renderUI({
HTML(paste(
"I display <strong>cube</strong> of input and <strong>also</strong> pass result to <code>output$power_of_input</code>: ",
as.numeric(input$int) ^ 3))
})
}
# Create routing. We provide routing path, a UI as well as a server-side callback for each page.
router <- make_router(
route("home", home_page, home_server),
route("side", side_page, side_server)
)
# Create output for our router in main UI of Shiny app.
ui <- shinyUI(fluidPage(
shiny::sliderInput("int", "Choose integer:", -10, 10, 1, 1),
router_ui()
))
# Plug router into Shiny server.
server <- shinyServer(function(input, output, session) {
router(input, output, session)
})
# Run server in a standard way.
shinyApp(ui, server)
runApp('ejemrouter.R')
runApp('ejemrouter.R')
runApp('ejemrouter.R')
runApp('ejemrouter.R')
runApp('ejemrouter.R')
runApp('ejemrouter.R')
runApp('ejemrouter.R')
runApp('ejemrouter.R')
about_page <- template("about", guideline_page())
source('D:/proyectoVDCOVID/appcodi/helpers/global.R', encoding = 'UTF-8')
library(shiny.router)
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("pages/about.R")
source("pages/guideline.R")
# This creates UI for each page.
page <- function(title, content, table_id) {
div(
menu,
titlePanel(title),
p(content),
#dataTableOutput(table_id)
)
}
home_page <-  page("Home page", "Welcome on sample routing page!", "table_one")
globalData_page <-page("globalData_page", "This is a globalData_page page", "table_one")
spanhisData_page <- page("spanhisData_page", "This is a spanhisData_page page", "table_one")
ValenciaData_page <-  page("ValenciaData_page", "This is a ValenciaData_page page", "table_one")
recomendacionesOMS_page <-  page("recomendacionesOMS_page", "This is a recomendacionesOMS_page page", "table_one")
globalDataUpdate_page <-  page("globalDataUpdate_page", "This is a globalDataUpdate_page page", "table_one")
spanhisDataUpdate_page <- page("spanhisDataUpdate_page", "This is a spanhisDataUpdate_page page", "table_one")
ValenciaDataUpdate_page<-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
ValenciaDataUpdate_page <-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
recomendacionesOMSUpdate_page <-  page("recomendacionesOMSUpdate_page", "This is a recomendacionesOMSUpdate_page page", "table_one")
about_page <- template("about", about_page())
about_page <- template("guideline", guideline_page())
router <- make_router(
route("/", home_page),
route("globalData", globalData_page),
route("spanhisData", spanhisData_page),
route("ValenciaData", ValenciaData_page),
route("recomendacionesOMS", recomendacionesOMS_page),
route("globalDataUpdate", globalDataUpdate_page),
route("spanhisDataUpdate", spanhisDataUpdate_page),
route("ValenciaDataUpdate", ValenciaDataUpdate_page),
route("recomendacionesOMSUpdate", recomendacionesOMSUpdate_page),
route("about", about_page),
route("guideline", guideline_page)
)
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("pages/about.R")
source("pages/guideline.R")
# This creates UI for each page.
page <- function(title, content, table_id) {
div(
menu,
titlePanel(title),
p(content),
#dataTableOutput(table_id)
)
}
home_page <-  page("Home page", "Welcome on sample routing page!", "table_one")
globalData_page <-page("globalData_page", "This is a globalData_page page", "table_one")
spanhisData_page <- page("spanhisData_page", "This is a spanhisData_page page", "table_one")
ValenciaData_page <-  page("ValenciaData_page", "This is a ValenciaData_page page", "table_one")
recomendacionesOMS_page <-  page("recomendacionesOMS_page", "This is a recomendacionesOMS_page page", "table_one")
globalDataUpdate_page <-  page("globalDataUpdate_page", "This is a globalDataUpdate_page page", "table_one")
spanhisDataUpdate_page <- page("spanhisDataUpdate_page", "This is a spanhisDataUpdate_page page", "table_one")
ValenciaDataUpdate_page<-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
ValenciaDataUpdate_page <-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
recomendacionesOMSUpdate_page <-  page("recomendacionesOMSUpdate_page", "This is a recomendacionesOMSUpdate_page page", "table_one")
about_page <- template("about", about_page())
about_page <- template("guideline", guideline_page())
router <- make_router(
route("/", home_page),
route("globalData", globalData_page),
route("spanhisData", spanhisData_page),
route("ValenciaData", ValenciaData_page),
route("recomendacionesOMS", recomendacionesOMS_page),
route("globalDataUpdate", globalDataUpdate_page),
route("spanhisDataUpdate", spanhisDataUpdate_page),
route("ValenciaDataUpdate", ValenciaDataUpdate_page),
route("recomendacionesOMSUpdate", recomendacionesOMSUpdate_page),
route("about", about_page),
route("guideline", guideline_page)
)
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("pages/about.R")
source("pages/template.R")
source("pages/guideline.R")
home_page <-  page("Home page", "Welcome on sample routing page!", "table_one")
globalData_page <-page("globalData_page", "This is a globalData_page page", "table_one")
spanhisData_page <- page("spanhisData_page", "This is a spanhisData_page page", "table_one")
ValenciaData_page <-  page("ValenciaData_page", "This is a ValenciaData_page page", "table_one")
recomendacionesOMS_page <-  page("recomendacionesOMS_page", "This is a recomendacionesOMS_page page", "table_one")
globalDataUpdate_page <-  page("globalDataUpdate_page", "This is a globalDataUpdate_page page", "table_one")
spanhisDataUpdate_page <- page("spanhisDataUpdate_page", "This is a spanhisDataUpdate_page page", "table_one")
ValenciaDataUpdate_page<-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
ValenciaDataUpdate_page <-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
recomendacionesOMSUpdate_page <-  page("recomendacionesOMSUpdate_page", "This is a recomendacionesOMSUpdate_page page", "table_one")
about_page <- template("about", about_page())
about_page <- template("guideline", guideline_page())
router <- make_router(
route("/", home_page),
route("globalData", globalData_page),
route("spanhisData", spanhisData_page),
route("ValenciaData", ValenciaData_page),
route("recomendacionesOMS", recomendacionesOMS_page),
route("globalDataUpdate", globalDataUpdate_page),
route("spanhisDataUpdate", spanhisDataUpdate_page),
route("ValenciaDataUpdate", ValenciaDataUpdate_page),
route("recomendacionesOMSUpdate", recomendacionesOMSUpdate_page),
route("about", about_page),
route("guideline", guideline_page)
)
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("pages/about.R")
source("pages/template.R")
source("pages/guideline.R")
home_page <-  page("Home page", "Welcome on sample routing page!", "table_one")
globalData_page <-page("globalData_page", "This is a globalData_page page", "table_one")
spanhisData_page <- page("spanhisData_page", "This is a spanhisData_page page", "table_one")
ValenciaData_page <-  page("ValenciaData_page", "This is a ValenciaData_page page", "table_one")
recomendacionesOMS_page <-  page("recomendacionesOMS_page", "This is a recomendacionesOMS_page page", "table_one")
globalDataUpdate_page <-  page("globalDataUpdate_page", "This is a globalDataUpdate_page page", "table_one")
spanhisDataUpdate_page <- page("spanhisDataUpdate_page", "This is a spanhisDataUpdate_page page", "table_one")
ValenciaDataUpdate_page<-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
ValenciaDataUpdate_page <-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
recomendacionesOMSUpdate_page <-  page("recomendacionesOMSUpdate_page", "This is a recomendacionesOMSUpdate_page page", "table_one")
about_page <- template("about", about_page())
about_page <- template("guideline", guideline_page())
router <- make_router(
route("/", home_page),
route("globalData", globalData_page),
route("spanhisData", spanhisData_page),
route("ValenciaData", ValenciaData_page),
route("recomendacionesOMS", recomendacionesOMS_page),
route("globalDataUpdate", globalDataUpdate_page),
route("spanhisDataUpdate", spanhisDataUpdate_page),
route("ValenciaDataUpdate", ValenciaDataUpdate_page),
route("recomendacionesOMSUpdate", recomendacionesOMSUpdate_page),
route("about", about_page),
route("guideline", guideline_page)
)
runApp('AppCOVID')
runApp('AppCOVID')
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("helpers/global.R")
getwd()
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("./helpers/global.R")
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("./helpers/global.R")
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("./helpers/global.R")
runApp('AppCOVID')
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("./pages/about.R")
source("./pages/template.R")
source("./pages/guideline.R")
library(shiny)
library(shinyjs)
library(dplyr)
library(ggplot2)
library(VIM)
library(shinydashboard)
library(Hmisc)
library(mlbench)
library(mice)
library(shiny.router)
#Cargamos las paginas que mostraremos en la aplicación y están enrutadas
source("./pages/about.R")
source("./pages/template.R")
source("./pages/guideline.R")
home_page <-  page("Home page", "Welcome on sample routing page!", "table_one")
globalData_page <-page("globalData_page", "This is a globalData_page page", "table_one")
spanhisData_page <- page("spanhisData_page", "This is a spanhisData_page page", "table_one")
ValenciaData_page <-  page("ValenciaData_page", "This is a ValenciaData_page page", "table_one")
recomendacionesOMS_page <-  page("recomendacionesOMS_page", "This is a recomendacionesOMS_page page", "table_one")
globalDataUpdate_page <-  page("globalDataUpdate_page", "This is a globalDataUpdate_page page", "table_one")
spanhisDataUpdate_page <- page("spanhisDataUpdate_page", "This is a spanhisDataUpdate_page page", "table_one")
ValenciaDataUpdate_page<-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
ValenciaDataUpdate_page <-  page("ValenciaDataUpdate_page", "This is a ValenciaDataUpdate_page page", "table_one")
recomendacionesOMSUpdate_page <-  page("recomendacionesOMSUpdate_page", "This is a recomendacionesOMSUpdate_page page", "table_one")
about_page <- template("about", about_page())
about_page <- template("guideline", guideline_page())
router <- make_router(
route("/", home_page),
route("globalData", globalData_page),
route("spanhisData", spanhisData_page),
route("ValenciaData", ValenciaData_page),
route("recomendacionesOMS", recomendacionesOMS_page),
route("globalDataUpdate", globalDataUpdate_page),
route("spanhisDataUpdate", spanhisDataUpdate_page),
route("ValenciaDataUpdate", ValenciaDataUpdate_page),
route("recomendacionesOMSUpdate", recomendacionesOMSUpdate_page),
route("about", about_page),
route("guideline", guideline_page)
)
#Cargamos el script global.R que contiene las paginas de navigación y las variables globales a usar
source("./helpers/global.R")
runApp('AppCOVID')
setwd(("."))
runApp('AppCOVID')
list.files ()
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
shiny::runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
install.packages("shinyDashboardThemes")
runApp('AppCOVID')
runApp('AppCOVID')
install.packages("shinyDashboardThemes")
runApp('AppCOVID')
install_github("nik01010/dashboardthemes")
library(devtools)
install_github("nik01010/dashboardthemes")
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
shiny::runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
))
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
