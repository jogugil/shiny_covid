})
images [!sapply(images, is.null)]
length(images)
images [!sapply(images, is.null)]
donwload_scrapingOMS <- function (input, output,session) {
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
df <- data.frame (title =alt,href=href)
}
df
})
images [!sapply(images, is.null)]
size <- length(images)
for (i in 1:size) {
label <- paste("Recomendación ",i," ")
link  <- paste ("<a href=\'",images [i]['href'])
link  <- paste (link,"\' \\>")
tabPanel(label, images [i]['title'], link )
}
}
runApp('AppCOVID')
source("./helpers/global.R")
getwd()
source("./AppCOVID/helpers/global.R")
source("./AppCOVID/helpers/helpers.R")
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
df <- data.frame (title =alt,href=href)
}
df
})
images [!sapply(images, is.null)]
size <- length(images)
size
images <- images [!sapply(images, is.null)]
size <- length(images)
for (i in 1:size) {
label <- paste("Recomendación ",i," ")
link  <- paste ("<a href=\'",images [i]['href'])
link  <- paste (link,"\' \\>")
print('label:',label)
print('link:',link)
tabPanel(label, images [i]['title'], link )
}
i<-1
label <- paste("Recomendación ",i," ")
label
label <- paste("Recomendación",i," ")
label
label <- trim(label)
label <- trim(label)
label <- str_trim(label)
label <- paste("Recomendación",i," ")
label
label <- str_trim(label)
label
images[1]
images[1] ['title']
images[1] [1]
images[1,1]
images[[1]]
images[[1]]['title']
images[[1]]$title
runApp('AppCOVID')
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
df <- data.frame (title =alt,href=href)
}
df
})
images <- images [!sapply(images, is.null)]
size <- length(images)
for (i in 1:size) {
label <- paste("Recomendación",i," ")
label <- str_trim(label)
link  <- paste ("<a href=\'",images[[i]]$href)
link  <- paste (link,"\' \\>")
print('label:',label)
print('link:',link)
tabPanel(label, images[[1]]$title, link )
}
i<-1
label <- paste("Recomendación",i," ")
label <- str_trim(label)
link  <- paste ("<a href=\'",images[[i]]$href)
link  <- paste (link,"\' \\>")
print('label:',label)
print('label:'+label)
cat('label:',label)
cat('link:',link)
tabPanel(label, images[[1]]$title, link )
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
print("salgo del bucle")
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp()
runApp()
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
df <- data.frame (title =alt,href=href)
}
df
})
images <- images [!sapply(images, is.null)]
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
df <- data.frame (title =alt,href=href)
}
df
})
images <- images [!sapply(images, is.null)]
images
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
png(file = href, height = 5, width = 10, units = "cm", res = 300)
df <- data.frame (title =alt,href=href)
}
df
})
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
print(href)
df <- data.frame (title =alt,href=href)
}
df
})
readPNG("https://www.who.int//images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7")
install.packages("png")
readPNG("https://www.who.int//images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7")
library(png)
readPNG("https://www.who.int//images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7")
readPNG("https://www.who.int//images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png")
readPNG("https://www.who.int/images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png")
download.file(https://www.who.int//images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7, destfile = "health-care-facilities-covid-es.tmb-1920v.png", mod = "wb")
download.file("https://www.who.int//images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7", destfile = "health-care-facilities-covid-es.tmb-1920v.png", mod = "wb")
patron <- "^((http[s]?|ftp):\/)?\/?([^:\/\s]+)((\/\w+)*\/)([\w\-\.]+[^#?\s]+)(.*)?(#[\w\-]+)?$"
grepl ('https://W*[:digit:]/',url)
ht <-"https://www.who.int//images/default-source/health-topics/coronavirus/health-care-facilities-covid-es.tmb-1920v.png?sfvrsn=823c9ad5_7"
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
label <- gsub (" ","_",alt)
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
print(href)
df <- data.frame (title =alt,href=href)
}
df
})
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
label <- gsub (" ","_",alt)
print (label)
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
print(href)
df <- data.frame (title =alt,href=href)
}
df
})
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
label <- gsub (" ","_",alt)
print (label)
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
print(href)
df <- data.frame (title =alt,href=href)
}
df
})
images <- images [!sapply(images, is.null)]
images
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
label <- gsub (" ","_",alt)
print (label)
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
print(href)
df <- data.frame (title =alt,href=href)
}
df
})
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
library(tidyverse)
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
library(shiny)
library(shinyWidgets)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(tidyverse)
library(rvest)
source("./helpers/helpers.R")
library(shiny)
library(shinyWidgets)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(tidyverse)
library(rvest)
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
label <- gsub (" ","_",alt)
print (label)
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
print(href)
df <- data.frame (title =alt,href=href)
}
df
})
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
#obtenemos sólo los poster resumen de las recomendaciones de la OMS
images <- html %>% html_nodes(".lazy") %>% lapply(., function (node) {
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
if(is_corona) {
alt  <- node %>% html_attr ('alt')
label <- gsub (" ","_",alt)
filename <- paste(PATH_DATA,label,'/')
filename <- paste(filename,'png','.')
print (filename)
href <- paste ("https://www.who.int",node %>% html_attr ('data-image'),sep='/')
print(href)
df <- data.frame (title =alt,href=href)
download.file(href, destfile = filename, mod = "wb")
}
df
})
images <- images [!sapply(images, is.null)]
images
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
r <-"COVID-19_:_Cómo_prepararse_se_alguien_se_enferma_en_su_hogar"
paste(PATH_DATA,str_trim(r),'/')
paste0(PATH_DATA,str_trim(r),'/')
paste0(PATH_DATA,str_trim(r),"/")
paste(PATH_DATA,str_trim(r),"/")
paste1(PATH_DATA,str_trim(r),"/")
paste(PATH_DATA,str_trim(r),"/")
runApp('AppCOVID')
runApp('AppCOVID')
patron <- "^COViD-19_:"
patron <- "^COViD-19 :"
alt <- "COVID-19_:_no_cancele_las_citas_médicas.png"
strsplit(alt, patron)
patron <- "^COViD-19_:"
strsplit(alt, patron)
patron <- "^COVID-19 :"
strsplit(alt, patron)
patron <- "^COVID-19_:"
strsplit(alt, patron)
url_recomendationsOMS ='https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019/advice-for-public'
html <-  url_recomendationsOMS  %>% read_html()
i<-1
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
df <- NULL
is_corona <- node %>% html_attr ('data-src')%>%grepl('coronavirus',.)
runApp('AppCOVID')
alt <- "COVID-19 : no cancele las citas médicas"
strsplit(string, patron)
strsplit(alt, patron)
patron
patron <- "^COVID-19 :"
strsplit(alt, patron)
pp <- strsplit(alt, patron)
pp
pp[[2]]
pp[[1,2]]
pp[[1]]
str(pp)
pp
pp[2]
pp[1]
str_trim(pp)
str_trimp(pp)
str_trim(pp)
str_trim(pp)
str_s`plit(alt,patron)`
str_split(alt,patron)`
str_split(alt,patron)
)
-ngfx>BN _
s
wF
.qefmkgwÑ, v
PT2
32
str_split(alt,patron)
str_split(alt,patron) [1]
str_split(alt,patron) [2]
regexpr(patron, alt)
str_split(alt,":")
str_split(alt,":") [2]
str_split(alt,":") [1][2]
str_split(alt,":") [1]
pp <- str_split(alt,":") [1]
pp
str(pp)
str(pp)[1,1]
str(pp)[2:1]
str(pp)[2:]
str(pp)[:2]
str(pp)[1:2]
str(pp)[2:1]
str(pp)[1]
str_trim (pp)
str_trim (pp[2])
str_trim (pp[1])
str_trim (pp[[1]])
str_trim (pp[[1]][2])
alt
alt %>% strsplit(.,patron)
alt %>% strsplit(.,patron)[[1]][2] %>% str_trim(.)
alt %>% strsplit(.,patron)[[1]][2]
alt %>% strsplit(.,patron)[[1]][1]
alt %>% strsplit(.,patron)[[1]]
alt %>% strsplit(.,patron)[1]
alt %>% strsplit(.,patron)
alt %>% strsplit(.,patron) %>% str_trim (.[[1]][2])
alt %>% strsplit(.,patron) %>% str_trim ()
alt %>% strsplit(.,patron) %>% str_trim (.[[1]])
alt %>% strsplit(.,patron)
alt %>% str_split(.,patron)
alt %>% str_split(.,patron)%>%str_trim(.[[1]][2])
alt %>% str_split(.,patron)%>%str_trim(.[[1]][2])
alt %>% str_split(.,patron) [[1]]
alt %>% str_split(.,patron)
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
#############
printApp <- function (sText,file=stdout()) {
if(DEBUG)
print(file=file,sText)
}
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
alt %>% stringr::str_locate(. , patron)
"TIOPEPEP" %>% stringr::str_locate(. , patron)
pp <- "TIOPEPEP" %>% stringr::str_locate(. , patron)
str (pp)
pp  ['end']
pp <- alt  %>% stringr::str_locate(. , patron)
pp['end']
pp
pp ["end"]
pp[[1]]$end
pp[[1]]
pp[[2]]
pp <- "TIOPEPEP" %>% stringr::str_locate(. , patron)
pp[[2]]
substring()
?substring
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp()
runApp('AppCOVID')
list.files(pattern='./data/RECOM/OMS/*png')
list.files(pattern='./APPCOVID/data/RECOM/OMS/*png')
list.files(pattern='./APPCOVID/data/RECOM/OMS/*.*')
list.files(pattern='./data/RECOM/OMS/*.*')
list.files(pattern='*.*')
list.files(pattern='*.png')
list.files(pattern='./App/COVID/*.png')
list.files(pattern='./App/COVID/*.*')
list.files(pattern='./AppCOVID/*.*')
list.files(pattern='./AppCOVID/')
?list.files
list.files(path='./AppCOVID/',pattern='*.*')
list.files(path='./AppCOVID/data/',pattern='*.*')
list.files(path='./AppCOVID/data/RECOM/OMS',pattern='*.*')
list.files(path='./AppCOVID/data/RECOM/OMS',pattern='*.*')
pp <- list.files(path='./AppCOVID/data/RECOM/OMS',pattern='*.*')
str(pp)
str(pp)
pp <- list.files(path='./AppCOVID/data/',pattern='*.*')
str(pp)
pp[[1]]
length(pp)
ll <- "casos_diagnostico_ccaa.csv"
str_view (ll,".[:alpha:]")
str_view (ll,".[:alpha:]$")
str_view (ll,".[:alpha:]*$")
str_view (ll,".[:alpha:]*$")
str_view (ll,".[:alpha:]*$")
gsub(".[:alpha:]*$",ll)
gsub(patron=".[:alpha:]*$",ll)
?gsub
gsub(pattern=".[:alpha:]*$",x=ll)
gsub(pattern=".[:alpha:]*$",ignore.case=FALSE,perl=TRUE,x=ll)
gsub(pattern=".[:alpha:]*$","",ignore.case=FALSE,perl=TRUE,x=ll)
atron = ".[:alpha:]*$"
gsub(pattern=atron,"",ignore.case=FALSE,perl=TRUE,x=ll)
gsub(pattern=atron,"",ignore.case=FALSE,x=ll)
patron = ".[:alpha:]*$"
str_view(patron,ll)
str_view(ll,patron)
?sub
sub(patron, " ",ll)
patron = ".\w*$"
patron = ".\\w*$"
str_view(ll,patron)
sub(patron, " ",ll)
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
runApp('AppCOVID')
